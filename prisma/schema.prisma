// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  firstName String  @map("first_name")
  lastName  String? @map("last_name")
  username  String  @unique
  password  String
  admin     Boolean @default(false)
  avatar    String?

  verified          Boolean @default(false)
  confirmationToken String? @map("confirmation_token")

  posts    Post[]
  comments Comment[]
  likes    Like[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  content   String?
  published Boolean? @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?     @map("author_id")

  comments  Comment[]
  likes     Like[]
  likeCount Int       @default(0) @map("likes")
  views     Int       @default(0)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("posts")
}

model Comment {
  id     Int   @id @default(autoincrement())
  user   User? @relation(fields: [userId], references: [id])
  post   Post? @relation(fields: [postId], references: [id])
  userId Int?  @map("user_id")
  postId Int?  @map("post_id")

  body String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("comments")
}

model Like {
  id     Int   @id @default(autoincrement())
  user   User? @relation(fields: [userId], references: [id])
  post   Post? @relation(fields: [postId], references: [id])
  userId Int?  @map("user_id")
  postId Int?  @map("post_id")

  @@map("likes")
}
